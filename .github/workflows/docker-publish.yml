name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types: [published]

env:
  IMAGE_NAME: ${{ github.repository_owner }}/baxter

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against the GitHub Container Registry
      # https://github.com/docker/login-action
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Login against the Docker Hub Registry
      # https://github.com/docker/login-action
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for base image
      # https://github.com/docker/metadata-action
      - name: Extract metadata for base image
        id: meta-base
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            docker.io/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=base-{{version}}
            type=semver,pattern=base-{{major}}.{{minor}}
            type=semver,pattern=base-{{major}}
            type=raw,value=base

      # Extract metadata (tags, labels) for vnc image
      # https://github.com/docker/metadata-action
      - name: Extract metadata for vnc image
        id: meta-vnc
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
            docker.io/${{ env.IMAGE_NAME }}
          flavor: latest=false
          tags: |
            type=semver,pattern=vnc-{{version}}
            type=semver,pattern=vnc-{{major}}.{{minor}}
            type=semver,pattern=vnc-{{major}}
            type=raw,value=vnc

      # Build and push base Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push base image
        id: build-and-push-base
        uses: docker/build-push-action@v6
        with:
          context: base
          push: true
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          cache-from: type=gha,scope=base
          cache-to: type=gha,scope=base,mode=max

      # Build and push VNC Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push vnc image
        id: build-and-push-vnc
        uses: docker/build-push-action@v6
        with:
          context: vnc
          pull: true
          push: true
          tags: ${{ steps.meta-vnc.outputs.tags }}
          labels: ${{ steps.meta-vnc.outputs.labels }}
          cache-from: type=gha,scope=vnc
          cache-to: type=gha,scope=vnc,mode=max

      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published base Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta-base.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-base.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published vnc Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta-vnc.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-vnc.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
